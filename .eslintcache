[{"C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\index.js":"1","C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\App.js":"2","C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\containers\\signIn.js":"3","C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\containers\\SignIn.js":"4","C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\containers\\Home.js":"5","C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\history.js":"6","C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\components\\Header.js":"7","C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\components\\Sort.js":"8","C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\components\\Library.js":"9","C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\components\\Pagination.js":"10","C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\components\\Footer.js":"11","C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\containers\\Search.js":"12","C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\components\\Clear.js":"13","C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\containers\\Detail.js":"14","C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\components\\Back.js":"15","C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\components\\Rating.js":"16","C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\components\\SearchBar.js":"17","C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\api\\googleBooks.js":"18","C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\components\\Card.js":"19","C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\contexts\\General.js":"20","C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\contexts\\Search.js":"21","C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\components\\GoogleAuth.js":"22","C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\components\\renderedList.js":"23","C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\components\\RenderedList.js":"24","C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\LoadSpinner\\LoadSpinner.js":"25","C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\components\\AddRemoveBtn.js":"26","C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\components\\Dropdown.js":"27"},{"size":281,"mtime":1620096246269,"results":"28","hashOfConfig":"29"},{"size":7979,"mtime":1621697989997,"results":"30","hashOfConfig":"29"},{"size":813,"mtime":1613961321340,"results":"31","hashOfConfig":"29"},{"size":955,"mtime":1620612542039,"results":"32","hashOfConfig":"29"},{"size":1995,"mtime":1621804799033,"results":"33","hashOfConfig":"29"},{"size":89,"mtime":1613959707813,"results":"34","hashOfConfig":"29"},{"size":2143,"mtime":1620872457977,"results":"35","hashOfConfig":"29"},{"size":1023,"mtime":1622163134039,"results":"36","hashOfConfig":"29"},{"size":3447,"mtime":1621805050096,"results":"37","hashOfConfig":"29"},{"size":521,"mtime":1614219440696,"results":"38","hashOfConfig":"29"},{"size":347,"mtime":1614219451304,"results":"39","hashOfConfig":"29"},{"size":530,"mtime":1621097204837,"results":"40","hashOfConfig":"29"},{"size":676,"mtime":1621094069727,"results":"41","hashOfConfig":"29"},{"size":11200,"mtime":1621635046217,"results":"42","hashOfConfig":"29"},{"size":410,"mtime":1615771386198,"results":"43","hashOfConfig":"29"},{"size":1041,"mtime":1614982666366,"results":"44","hashOfConfig":"29"},{"size":2188,"mtime":1621094418285,"results":"45","hashOfConfig":"29"},{"size":233,"mtime":1621092083766,"results":"46","hashOfConfig":"29"},{"size":865,"mtime":1616205179349,"results":"47","hashOfConfig":"29"},{"size":567,"mtime":1620873846917,"results":"48","hashOfConfig":"29"},{"size":491,"mtime":1620611639119,"results":"49","hashOfConfig":"29"},{"size":610,"mtime":1621391983793,"results":"50","hashOfConfig":"29"},{"size":1637,"mtime":1620529003607,"results":"51","hashOfConfig":"29"},{"size":3249,"mtime":1621635038463,"results":"52","hashOfConfig":"29"},{"size":335,"mtime":1620612468264,"results":"53","hashOfConfig":"29"},{"size":3720,"mtime":1621298841927,"results":"54","hashOfConfig":"29"},{"size":3803,"mtime":1622159947289,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"louzim",{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":3,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"58"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\index.js",[],["120","121"],"C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\App.js",["122","123"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\nimport history from \"./history\";\r\nimport SignIn from \"./containers/SignIn\";\r\nimport Home from \"./containers/Home\";\r\nimport Search from \"./containers/Search\";\r\nimport Detail from \"./containers/Detail\";\r\nimport { SearchProvider } from \"./contexts/Search\";\r\nimport { GeneralContext } from \"./contexts/General\";\r\n\r\nfunction App() {\r\n  const { state, setState } = useContext(GeneralContext);\r\n  const [loaded, setLoaded] = useState(false);\r\n  const location = history.location.pathname;\r\n\r\n  // Update context state on GAPI auth status change\r\n  const onAuthChange = () => {\r\n    if (location === \"/home\" && state.authStatus === \"guest\") {\r\n      console.log(\r\n        \"won't reload and change authstatus as the guest on home page\"\r\n      );\r\n    } else {\r\n      const auth = window.gapi.auth2.getAuthInstance();\r\n      setState({ authStatus: auth.isSignedIn.get() });\r\n      console.log(\"onAuthChange activated in APP\");\r\n\r\n      if (auth.isSignedIn.get() === true) {\r\n        const token = auth.currentUser.he.qc.access_token;\r\n        setState({ accessToken: token });\r\n        console.log(\"I have the token\");\r\n      }\r\n    }\r\n  };\r\n\r\n  // Determine location based on auth status\r\n  const determineLocation = () => {\r\n    console.log(state.authStatus);\r\n    switch (state.authStatus) {\r\n      case true:\r\n        switch (location) {\r\n          case \"/\":\r\n            history.push(\"/home\");\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        break;\r\n      case \"guest\":\r\n        break;\r\n      case false:\r\n        switch (location) {\r\n          case \"/\":\r\n            console.log(\"i'm doin nothin'\");\r\n            break;\r\n          default:\r\n            history.push(\"/\");\r\n            break;\r\n        }\r\n        break;\r\n      // case \"guest\":\r\n      //   //history.push(\"/home\"); <-- this happens at Link component\r\n      //   break;\r\n      default:\r\n        console.log(\"Default break activated\");\r\n        break;\r\n    }\r\n  };\r\n\r\n  //determineLocation(); // Should we put this in useEffect in .then at google gapi?\r\n\r\n  // After context state updates, proceed based on auth status and location check\r\n  useEffect(() => {\r\n    //determineLocation();\r\n    if (loaded === true) {\r\n      onAuthChange();\r\n      determineLocation();\r\n    }\r\n  }, [state.authStatus, loaded]);\r\n\r\n  // Check auth status at start\r\n  useEffect(() => {\r\n    window.gapi.load(\"client:auth2\", () => {\r\n      window.gapi.client\r\n        .init({\r\n          clientId:\r\n            \"320808104510-qjdjiooodidc8jm1i000oteqc7h63029.apps.googleusercontent.com\",\r\n          scope: \"https://www.googleapis.com/auth/books\",\r\n        })\r\n        .then(() => {\r\n          const auth = window.gapi.auth2.getAuthInstance();\r\n          console.log(\"Event listender mounted\");\r\n          auth.isSignedIn.listen(onAuthChange);\r\n          setLoaded(true);\r\n        });\r\n      //.then(onAuthChange());\r\n      //.then(determineLocation());\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Router history={history}>\r\n        <Switch>\r\n          <SearchProvider>\r\n            <Route path=\"/\" exact component={SignIn} />\r\n            <Route path=\"/home\" exact component={Home} />\r\n            <Route path=\"/search\" exact component={Search} />\r\n            <Route path=\"/detail\" exact component={Detail} />\r\n          </SearchProvider>\r\n        </Switch>\r\n      </Router>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n// import React, { useContext, useEffect, useState } from \"react\";\r\n// import { Router, Route, Switch } from \"react-router-dom\";\r\n// import history from \"./history\";\r\n// import SignIn from \"./containers/SignIn\";\r\n// import Home from \"./containers/Home\";\r\n// import Search from \"./containers/Search\";\r\n// import Detail from \"./containers/Detail\";\r\n// import { SearchProvider } from \"./contexts/Search\";\r\n// import { GeneralContext } from \"./contexts/General\";\r\n\r\n// function App() {\r\n//   const { state, setState } = useContext(GeneralContext);\r\n//   //const [loaded, setLoaded] = useState(false);\r\n//   const location = history.location.pathname;\r\n\r\n//   // Initialize Google API\r\n//   const initGoogle = async () => {\r\n//     const loadGAPI = async () => {\r\n//       try {\r\n//         window.gapi.load(\"client:auth2\", () => {\r\n//           window.gapi.client\r\n//             .init({\r\n//               clientId:\r\n//                 \"320808104510-qjdjiooodidc8jm1i000oteqc7h63029.apps.googleusercontent.com\",\r\n//               scope: \"https://www.googleapis.com/auth/books\",\r\n//             })\r\n//             .then(() => {\r\n//               const auth = window.gapi.auth2.getAuthInstance();\r\n//               console.log(\"Event listender mounted\");\r\n//               auth.isSignedIn.listen(onAuthChange);\r\n//               //setLoaded(true);\r\n//             });\r\n//           //.then(onAuthChange());\r\n//         });\r\n//       } catch (err) {\r\n//         console.log(err);\r\n//       }\r\n//     };\r\n//     await loadGAPI();\r\n//   };\r\n//   initGoogle();\r\n\r\n//   // Update state on auth status change\r\n//   const onAuthChange = async () => {\r\n//     // if (location === \"/home\" && state.authStatus === \"guest\") {\r\n//     //   console.log(\r\n//     //     \"won't reload and change authstatus as the guest on home page\"\r\n//     //   );\r\n//     console.log(\"onAuthChange activted in APP (before try block)\");\r\n//     try {\r\n//       const auth = window.gapi.auth2.getAuthInstance();\r\n//       await setState({ authStatus: auth.isSignedIn.get() });\r\n//       console.log(\"onAuthChange activated in APP\");\r\n\r\n//       if (auth.isSignedIn.get() === true) {\r\n//         const token = auth.currentUser.he.qc.access_token;\r\n//         setState({ accessToken: token });\r\n//         console.log(\"I have the token\");\r\n//       }\r\n//     } catch (err) {\r\n//       console.log(err);\r\n//     }\r\n//     determineLocation();\r\n//     console.log(\"Determine Location ran in OnAuthChange\");\r\n//   };\r\n\r\n//   // Determine location based on auth status\r\n//   const determineLocation = () => {\r\n//     console.log(state.authStatus);\r\n//     switch (state.authStatus) {\r\n//       case true:\r\n//         switch (location) {\r\n//           case \"/\":\r\n//             history.push(\"/home\");\r\n//             break;\r\n//           case \"/home\":\r\n//             console.log(\"i'm doin nothin'\");\r\n//             break;\r\n//           default:\r\n//             break;\r\n//         }\r\n//         break;\r\n//       case \"guest\":\r\n//         //history.push(\"/home\"); <-- this happens at Link component\r\n//         break;\r\n//       case false:\r\n//         switch (location) {\r\n//           case \"/\":\r\n//             console.log(\"i'm doin nothin'\");\r\n//             break;\r\n//           default:\r\n//             history.push(\"/\");\r\n//             break;\r\n//         }\r\n//         break;\r\n//       // case \"guest\":\r\n//       //   //history.push(\"/home\"); <-- this happens at Link component\r\n//       //   break;\r\n//       default:\r\n//         console.log(\"Default break activated\");\r\n//         break;\r\n//     }\r\n//   };\r\n\r\n//   // Should we put this in useEffect in .then at google gapi?\r\n\r\n//   // After context state updates, proceed based on auth status and location check\r\n//   // useEffect(() => {\r\n//   //   onAuthChange();\r\n//   //   //if (loaded === true) {\r\n//   //   // onAuthChange();\r\n//   //   //}\r\n//   // }, [state.authStatus /*, loaded*/]);\r\n\r\n//   return (\r\n//     <React.Fragment>\r\n//       <Router history={history}>\r\n//         <Switch>\r\n//           <SearchProvider>\r\n//             <Route path=\"/\" exact component={SignIn} />\r\n//             <Route path=\"/home\" exact component={Home} />\r\n//             <Route path=\"/search\" exact component={Search} />\r\n//             <Route path=\"/detail\" exact component={Detail} />\r\n//           </SearchProvider>\r\n//         </Switch>\r\n//       </Router>\r\n//     </React.Fragment>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n","C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\containers\\signIn.js",[],"C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\containers\\SignIn.js",[],"C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\containers\\Home.js",["124","125","126"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport Sort from \"../components/Sort\";\r\nimport Library from \"../components/Library\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport Footer from \"../components/Footer\";\r\nimport google from \"../api/googleBooks\";\r\nimport { GeneralContext } from \"../contexts/General\";\r\nimport Spinner from \"../LoadSpinner/LoadSpinner\";\r\n\r\nconst Home = () => {\r\n  const { state, setState } = useContext(GeneralContext);\r\n  const [theUsersBooks, setTheUsersBooks] = useState(null);\r\n  console.log(\"I rendered Home\");\r\n  //Get users book info in console\r\n  //let theUsersBooks;\r\n  const getUsersBooks = async () => {\r\n    //Make API request\r\n    try {\r\n      const response = await google.get(\"/mylibrary/bookshelves/0/volumes\", {\r\n        headers: {\r\n          Authorization: `Bearer ${state.accessToken}`,\r\n        },\r\n      });\r\n\r\n      //Convert google data into Array\r\n      const results = Object.values(response.data.items);\r\n\r\n      // Set data in State -- Verify where to keep state data, local as prop passed down to Library component, or in Context.\r\n      // if (state.userBooks === results) {\r\n      //   return null;\r\n      // } else {\r\n      //   setState({ userBooks: results });\r\n      // }\r\n      //theUsersBooks = results;\r\n      setTheUsersBooks(results);\r\n      console.log(\"Got the usersbook from HOME\");\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (state.authStatus === true) {\r\n      getUsersBooks();\r\n      console.log(\"UseEffect triggered in HOME\");\r\n    }\r\n  }, [state.accessToken]);\r\n\r\n  // if (!state.authStatus) {\r\n  //   return <Spinner />;\r\n  // }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Header />\r\n      <div className=\"content\">\r\n        <Sort />\r\n        <Library theUsersBooks={theUsersBooks} />\r\n        <Pagination />\r\n      </div>\r\n      <Footer />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\history.js",[],"C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\components\\Header.js",["127"],"import React, { useContext, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport { GeneralContext } from \"../contexts/General\";\r\nimport history from \"../history\";\r\n\r\nconst Header = () => {\r\n  const { state, setState } = useContext(GeneralContext);\r\n\r\n  // const onAuthChange = () => {\r\n  //   console.log(\"onAuthChange activated\");\r\n  //   // console.log(\"GoogleAuth Unmounted\");\r\n  //   // const auth = window.gapi.auth2.getAuthInstance();\r\n  //   // window.removeEventListener(onAuthChange(), auth.isSignedIn.listen());\r\n  //   history.push(\"/\");\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   const auth = window.gapi.auth2.getAuthInstance();\r\n  //   auth.isSignedIn.listen(onAuthChange);\r\n  //   console.log(\"Listender mounted in HEADER.\");\r\n  // }, []);\r\n\r\n  const onClick = () => {\r\n    if (state.authStatus === true) {\r\n      const auth = window.gapi.auth2.getAuthInstance();\r\n      auth.signOut();\r\n      setState({ userBooks: null });\r\n      // auth.isSignedIn.listen(onAuthChange);\r\n      console.log(\r\n        \"Auth State in HEADER right after sign out click: \" + state.authStatus\r\n      );\r\n    } else {\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  // const exit = () => {\r\n  //   if (state.authStatus === false) {\r\n  //     console.log(\"I tried to exit\");\r\n  //     history.push(\"/\");\r\n  //   }\r\n  // };\r\n\r\n  // Runs after user is signed out in google auth\r\n  // useEffect(() => {\r\n  //   console.log(\"state at beginining of home: \" + state.authStatus);\r\n  //   if (state.authStatus === false) {\r\n  //     console.log(\"I tried to exit\");\r\n  //     history.push(\"/\");\r\n  //   }\r\n  // }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <header className=\"header\">\r\n        <Link to=\"/home\" className=\"logo\">\r\n          <svg className=\"logo__svg\">\r\n            <use xlinkHref=\"img/sprite.svg#icon-books\"></use>\r\n          </svg>\r\n          myLibrary\r\n        </Link>\r\n        <SearchBar />\r\n\r\n        <div className=\"Sign-out btn sign-out__btn\" onClick={onClick}>\r\n          Sign out\r\n        </div>\r\n      </header>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\components\\Sort.js",[],"C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\components\\Library.js",["128"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport RenderedList from \"./RenderedList\";\r\nimport { SearchContext } from \"../contexts/Search\";\r\nimport { GeneralContext } from \"../contexts/General\";\r\nimport history from \"../history\";\r\n\r\nconst Library = ({ theUsersBooks }) => {\r\n  console.log(\"I rendered Library\");\r\n  // Init consts\r\n  const [data, setData] = useState(null);\r\n  const { searchData } = useContext(SearchContext);\r\n  const { state, setState } = useContext(GeneralContext);\r\n  let fauxData = null;\r\n\r\n  //Functions to update Context State if necessary\r\n  const updateDetailData = () => {\r\n    if (state.detailData === fauxData) {\r\n      console.log(\"I returned null\");\r\n      return null;\r\n    } else {\r\n      setState({ detailData: fauxData });\r\n      console.log(\"I am setting detail data state\");\r\n    }\r\n  };\r\n\r\n  const updateUserBooks = () => {\r\n    if (state.userBooks === theUsersBooks) {\r\n      return null;\r\n    } else {\r\n      setState({ userBooks: theUsersBooks });\r\n      console.log(\"I am setting userBooks state\");\r\n    }\r\n  };\r\n\r\n  // Function to determine which data gets passed down to renderedList (based on path location)\r\n  const determineData = async () => {\r\n    try {\r\n      const location = history.location.pathname;\r\n      //console.log(\"Ran determine data\");\r\n      if (location === \"/search\") {\r\n        //console.log(`Search Data in Library component: ${searchData}`);\r\n        if (searchData !== null) {\r\n          if (searchData.results !== null && searchData.results !== data) {\r\n            setData(searchData.results);\r\n            fauxData = searchData.results;\r\n          } else {\r\n            return null;\r\n          }\r\n        }\r\n      } else if (location === \"/home\") {\r\n        if (theUsersBooks !== null && theUsersBooks !== data) {\r\n          setData(theUsersBooks);\r\n          fauxData = theUsersBooks;\r\n          //console.log(\"userbooks is full of books\");\r\n        }\r\n      } else {\r\n        setData(\"empty\");\r\n        fauxData = \"empty\";\r\n        //console.log(\"I set data to empty\");\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const determineAndUpdateData = async () => {\r\n    if (theUsersBooks !== null) {\r\n      await determineData();\r\n      console.log(\"determineDataFinished\");\r\n      //console.log(data);\r\n      //console.log(theUsersBooks);\r\n      updateDetailData();\r\n      updateUserBooks();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    determineAndUpdateData();\r\n  }, [theUsersBooks, searchData]);\r\n\r\n  //console.log(data);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div class=\"library\">\r\n        <RenderedList data={data} />\r\n        {/* <Card\r\n          title=\"No Books to Show\"\r\n          author=\"Nobody\"\r\n          rating=\"0 stars\"\r\n          img=\"/img/world.jpg\"\r\n        /> */}\r\n\r\n        {/* <div class=\"library__book\">\r\n          <div class=\"library__book__img-container\">\r\n            <img src={noImage} alt=\"book-cover\" />\r\n          </div>\r\n          <div class=\"library__book__title\">Title</div>\r\n          <div class=\"library__book__author\">Author</div>\r\n          <div class=\"library__book__rating\">\r\n            <div class=\"library__book__rating__star\">&#9733;</div>\r\n            <div class=\"library__book__rating__star\">&#9733;</div>\r\n            <div class=\"library__book__rating__star\">&#9733;</div>\r\n          </div>\r\n        </div> */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Library;\r\n","C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\components\\Pagination.js",[],"C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\components\\Footer.js",[],"C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\containers\\Search.js",[],"C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\components\\Clear.js",[],"C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\containers\\Detail.js",["129"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport Back from \"../components/Back\";\r\nimport Rating from \"../components/Rating\";\r\nimport AddRemoveBtn from \"../components/AddRemoveBtn\";\r\nimport Footer from \"../components/Footer\";\r\nimport { GeneralContext } from \"../contexts/General\";\r\nimport noImage from \"../assets/no-img.png\";\r\n//import history from \"../history\";\r\n\r\nconst Detail = () => {\r\n  const { state } = useContext(GeneralContext);\r\n  const [descriptionState, setDescriptionState] = useState(null);\r\n\r\n  // Reset scroll position\r\n  const scrollReset = () => {\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  scrollReset();\r\n  // console.log(state.detailData);\r\n  // Find book by ID in search data or userBooks data\r\n  const bookID = state.bookID_for_detail;\r\n  const book = state.detailData.find((el) => el.id === bookID);\r\n\r\n  //ALT making sure if you refresh page it doesn't crash app\r\n  // let book;\r\n  // if (state.detailData) {\r\n  //   console.log(\"There is detailData\");\r\n  //   book = state.detailData.find((el) => el.id === bookID);\r\n  // } else {\r\n  //   //history.goBack(); //set to previous page\r\n  //   history.push(\"/home\");\r\n  // }\r\n\r\n  // Destructure book\r\n  const { volumeInfo } = book;\r\n  const {\r\n    title,\r\n    authors,\r\n    categories,\r\n    description,\r\n    pageCount,\r\n    publishedDate,\r\n    imageLinks,\r\n  } = volumeInfo;\r\n\r\n  // Clean up data / error handeling\r\n\r\n  const getAuthor = () => {\r\n    if (authors) {\r\n      if (authors[0].length < 20) {\r\n        return authors[0];\r\n      } else {\r\n        return \"Author name too long!\";\r\n      }\r\n    }\r\n    return \"N/A\";\r\n  };\r\n\r\n  const getImage = () => {\r\n    if (imageLinks) {\r\n      if (imageLinks.thumbnail) {\r\n        return imageLinks.thumbnail;\r\n      }\r\n      if (imageLinks.smallThumbnail) {\r\n        return imageLinks.smallThumbnail;\r\n      }\r\n      return noImage;\r\n    }\r\n  };\r\n\r\n  // Handle description length\r\n  const shortenDescription = () => {\r\n    const shortDescriptionRaw = description.slice(0, 200);\r\n    const shortDescription = shortDescriptionRaw.concat(\"...\");\r\n    return shortDescription;\r\n  };\r\n\r\n  // Handle description state\r\n  let setDescription = null;\r\n  const handleDescriptionState = () => {\r\n    if (descriptionState !== null) {\r\n      setDescription = descriptionState;\r\n    } else {\r\n      if (description) {\r\n        if (description.length >= 200) {\r\n          setDescription = \"closed\";\r\n        } else {\r\n          setDescription = \"none\";\r\n        }\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n  };\r\n\r\n  handleDescriptionState();\r\n\r\n  const getDescription = () => {\r\n    if (setDescription === \"closed\") {\r\n      return (\r\n        <React.Fragment>\r\n          {shortenDescription()}\r\n          <span\r\n            style={{ cursor: \"pointer\", color: \"purple\" }}\r\n            onClick={() => {\r\n              setDescriptionState(\"open\");\r\n            }}\r\n          >\r\n            (Show more)\r\n          </span>\r\n        </React.Fragment>\r\n      );\r\n    } else if (setDescription === \"open\") {\r\n      return (\r\n        <React.Fragment>\r\n          {description}\r\n          <span\r\n            style={{ cursor: \"pointer\", color: \"purple\" }}\r\n            onClick={() => {\r\n              setDescriptionState(\"closed\");\r\n            }}\r\n          >\r\n            &nbsp;(Show less)\r\n          </span>\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      console.log(\"else\");\r\n      return <React.Fragment>{description}</React.Fragment>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Header />\r\n      <div className=\"content__book\">\r\n        <Back />\r\n        <div class=\"img\">\r\n          <img src={getImage()} alt=\"\" />\r\n        </div>\r\n\r\n        <div class=\"detail\">\r\n          <div class=\"detail__title\">{title}</div>\r\n          <div class=\"detail__author\">\r\n            <span style={{ fontWeight: 800 }}>Author: </span>\r\n            {getAuthor()}\r\n          </div>\r\n          <br />\r\n          <div class=\"detail__category\">\r\n            <span style={{ fontWeight: 800 }}>Category: </span>\r\n            {categories}\r\n          </div>\r\n          <div class=\"detail__length\">\r\n            {\" \"}\r\n            <span style={{ fontWeight: 800 }}>Length: </span>\r\n            {pageCount} pages\r\n          </div>\r\n          <div class=\"detail__length\">\r\n            <span style={{ fontWeight: 800 }}>Published Date: </span>{\" \"}\r\n            {publishedDate}\r\n          </div>\r\n          <div class=\"detail__description\">\r\n            <span style={{ fontWeight: 800 }}>Description: </span>{\" \"}\r\n            {getDescription()}\r\n          </div>\r\n        </div>\r\n        <Rating />\r\n        <AddRemoveBtn />\r\n      </div>\r\n      <Footer />\r\n    </React.Fragment>\r\n  );\r\n\r\n  // return (\r\n  //   <React.Fragment>\r\n  //     <Header />\r\n  //     <div className=\"content__book\">\r\n  //       <Back />\r\n  //       <div class=\"img\">\r\n  //         <img src={noImage} alt=\"\" />\r\n  //       </div>\r\n\r\n  //       <div class=\"detail\">\r\n  //         <div class=\"detail__title\">Oops!</div>\r\n  //         <div class=\"detail__author\">Error</div>\r\n  //         <brk />\r\n  //         <div class=\"detail__category\">Sorry, something went wrong.</div>\r\n  //       </div>\r\n  //       <Rating />\r\n  //       <AddBtn />\r\n  //     </div>\r\n  //     <Footer />\r\n  //   </React.Fragment>\r\n  // );\r\n};\r\n\r\nexport default Detail;\r\n\r\n//*************************All the code below works 05.19.21!\r\n// import React, { useState, useEffect, useContext } from \"react\";\r\n// import Header from \"../components/Header\";\r\n// import Back from \"../components/Back\";\r\n// import Rating from \"../components/Rating\";\r\n// import AddRemoveBtn from \"../components/AddRemoveBtn\";\r\n// import Footer from \"../components/Footer\";\r\n// import { GeneralContext } from \"../contexts/General\";\r\n// import noImage from \"../assets/no-img.png\";\r\n// //import history from \"../history\";\r\n\r\n// const Detail = () => {\r\n//   const { state } = useContext(GeneralContext);\r\n//   const [descriptionState, setDescriptionState] = useState(\"\");\r\n\r\n//   // Reset scroll position\r\n//   const scrollReset = () => {\r\n//     window.scrollTo(0, 0);\r\n//   };\r\n\r\n//   scrollReset();\r\n\r\n//   // Find book by ID in search data or userBooks data\r\n//   const bookID = state.bookID_for_detail;\r\n//   const book = state.detailData.find((el) => el.id === bookID);\r\n\r\n//   //ALT making sure if you refresh page it doesn't crash app\r\n//   // let book;\r\n//   // if (state.detailData) {\r\n//   //   console.log(\"There is detailData\");\r\n//   //   book = state.detailData.find((el) => el.id === bookID);\r\n//   // } else {\r\n//   //   //history.goBack(); //set to previous page\r\n//   //   history.push(\"/home\");\r\n//   // }\r\n\r\n//   // Destructure book\r\n//   const { volumeInfo } = book;\r\n//   const {\r\n//     title,\r\n//     authors,\r\n//     categories,\r\n//     description,\r\n//     pageCount,\r\n//     publishedDate,\r\n//     imageLinks,\r\n//   } = volumeInfo;\r\n\r\n//   // Clean up data / error handeling\r\n\r\n//   const getAuthor = () => {\r\n//     if (authors) {\r\n//       if (authors[0].length < 20) {\r\n//         return authors[0];\r\n//       } else {\r\n//         return \"Author name too long!\";\r\n//       }\r\n//     }\r\n//     return \"N/A\";\r\n//   };\r\n\r\n//   const getImage = () => {\r\n//     if (imageLinks) {\r\n//       if (imageLinks.thumbnail) {\r\n//         return imageLinks.thumbnail;\r\n//       }\r\n//       if (imageLinks.smallThumbnail) {\r\n//         return imageLinks.smallThumbnail;\r\n//       }\r\n//       return noImage;\r\n//     }\r\n//   };\r\n\r\n//   // Handle description length\r\n//   const shortenDescription = () => {\r\n//     const shortDescriptionRaw = description.slice(0, 200);\r\n//     const shortDescription = shortDescriptionRaw.concat(\"...\");\r\n//     return shortDescription;\r\n//   };\r\n\r\n//   // Handle description state\r\n//   const initialDescriptionState = () => {\r\n//     if (description) {\r\n//       if (description.length >= 200) {\r\n//         setDescriptionState(\"closed\");\r\n//       } else {\r\n//         setDescriptionState(\"none\");\r\n//       }\r\n//     } else {\r\n//       return null;\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     initialDescriptionState();\r\n//   }, []);\r\n\r\n//   const getDescription = () => {\r\n//     if (descriptionState === \"closed\") {\r\n//       return (\r\n//         <React.Fragment>\r\n//           {shortenDescription()}\r\n//           <span\r\n//             style={{ cursor: \"pointer\", color: \"purple\" }}\r\n//             onClick={() => {\r\n//               setDescriptionState(\"open\");\r\n//             }}\r\n//           >\r\n//             (Show more)\r\n//           </span>\r\n//         </React.Fragment>\r\n//       );\r\n//     } else if (descriptionState === \"open\") {\r\n//       return (\r\n//         <React.Fragment>\r\n//           {description}\r\n//           <span\r\n//             style={{ cursor: \"pointer\", color: \"purple\" }}\r\n//             onClick={() => {\r\n//               setDescriptionState(\"closed\");\r\n//             }}\r\n//           >\r\n//             &nbsp;(Show less)\r\n//           </span>\r\n//         </React.Fragment>\r\n//       );\r\n//     } else {\r\n//       return <React.Fragment>{description}</React.Fragment>;\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <React.Fragment>\r\n//       <Header />\r\n//       <div className=\"content__book\">\r\n//         <Back />\r\n//         <div class=\"img\">\r\n//           <img src={getImage()} alt=\"\" />\r\n//         </div>\r\n\r\n//         <div class=\"detail\">\r\n//           <div class=\"detail__title\">{title}</div>\r\n//           <div class=\"detail__author\">\r\n//             <span style={{ fontWeight: 800 }}>Author: </span>\r\n//             {getAuthor()}\r\n//           </div>\r\n//           <br />\r\n//           <div class=\"detail__category\">\r\n//             <span style={{ fontWeight: 800 }}>Category: </span>\r\n//             {categories}\r\n//           </div>\r\n//           <div class=\"detail__length\">\r\n//             {\" \"}\r\n//             <span style={{ fontWeight: 800 }}>Length: </span>\r\n//             {pageCount} pages\r\n//           </div>\r\n//           <div class=\"detail__length\">\r\n//             <span style={{ fontWeight: 800 }}>Published Date: </span>{\" \"}\r\n//             {publishedDate}\r\n//           </div>\r\n//           <div class=\"detail__description\">\r\n//             <span style={{ fontWeight: 800 }}>Description: </span>{\" \"}\r\n//             {getDescription()}\r\n//           </div>\r\n//         </div>\r\n//         <Rating />\r\n//         <AddRemoveBtn />\r\n//       </div>\r\n//       <Footer />\r\n//     </React.Fragment>\r\n//   );\r\n\r\n//   // return (\r\n//   //   <React.Fragment>\r\n//   //     <Header />\r\n//   //     <div className=\"content__book\">\r\n//   //       <Back />\r\n//   //       <div class=\"img\">\r\n//   //         <img src={noImage} alt=\"\" />\r\n//   //       </div>\r\n\r\n//   //       <div class=\"detail\">\r\n//   //         <div class=\"detail__title\">Oops!</div>\r\n//   //         <div class=\"detail__author\">Error</div>\r\n//   //         <brk />\r\n//   //         <div class=\"detail__category\">Sorry, something went wrong.</div>\r\n//   //       </div>\r\n//   //       <Rating />\r\n//   //       <AddBtn />\r\n//   //     </div>\r\n//   //     <Footer />\r\n//   //   </React.Fragment>\r\n//   // );\r\n// };\r\n\r\n// export default Detail;\r\n","C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\components\\Back.js",[],"C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\components\\Rating.js",[],"C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\components\\SearchBar.js",["130"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport google from \"../api/googleBooks\";\r\nimport { SearchContext } from \"../contexts/Search\";\r\nimport history from \"../history\";\r\n\r\nconst SearchBar = () => {\r\n  const [term, setTerm] = useState(\"\");\r\n  const { setSearchData } = useContext(SearchContext);\r\n\r\n  const onInputChange = (event) => {\r\n    setTerm(event.target.value);\r\n  };\r\n\r\n  const query = async () => {\r\n    //Make API request with query term\r\n    try {\r\n      const response = await google.get(\"/volumes?\", {\r\n        params: {\r\n          q: term,\r\n        },\r\n      });\r\n\r\n      //Convert google data into Array\r\n      const results = Object.values(response.data.items);\r\n      console.log(results);\r\n\r\n      // Set data in Search Context\r\n      setSearchData({ results }); // UPDATE TO just (results) so don't have to do .results on searchdata!!*****\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  // ON SUBMIT\r\n  const onSubmit = async () => {\r\n    console.log(\"This is the query term in onSubmit: \" + term);\r\n    //Reset search data\r\n    //setSearchData(null);\r\n\r\n    // Send API request\r\n    query();\r\n\r\n    //Route to search results page\r\n    history.push(\"/search\");\r\n  };\r\n\r\n  // ON KEY PRESS\r\n  useEffect(() => {\r\n    const listener = (event) => {\r\n      if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\r\n        console.log(\"Upon enter\" + term);\r\n        onSubmit();\r\n      }\r\n    };\r\n    document.addEventListener(\"keydown\", listener);\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", listener);\r\n    };\r\n  }, [term]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"search-bar\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"search-bar__input\"\r\n          placeholder=\"Search for books here...\"\r\n          value={term}\r\n          onChange={onInputChange}\r\n        />\r\n        <button className=\"search-bar__btn\" onClick={onSubmit}>\r\n          <img\r\n            className=\"search-bar__icon\"\r\n            src=\"img/svg/search.svg\"\r\n            alt=\"mag-glass\"\r\n          ></img>\r\n        </button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\api\\googleBooks.js",[],"C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\components\\Card.js",[],"C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\contexts\\General.js",[],"C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\contexts\\Search.js",[],"C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\components\\GoogleAuth.js",["131","132"],"import React, { useContext } from \"react\";\r\nimport { GeneralContext } from \"../contexts/General\";\r\n\r\nconst GoogleAuth = () => {\r\n  // const { state } = useContext(GeneralContext);\r\n\r\n  const onClick = () => {\r\n    const auth = window.gapi.auth2.getAuthInstance();\r\n    auth.signIn();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div to=\"/\" className=\"login btn\" onClick={onClick}>\r\n        Sign in with Google\r\n        <svg className=\"google__svg\">\r\n          <use xlinkHref=\"img/sprite.svg#icon-google\"></use>\r\n        </svg>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default GoogleAuth;\r\n","C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\components\\renderedList.js",["133","134","135","136"],"C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\components\\RenderedList.js",["137","138"],"import React, { useContext, useEffect } from \"react\";\r\nimport Card from \"./Card\";\r\nimport { GeneralContext } from \"../contexts/General\";\r\nimport noImage from \"../assets/no-img.png\";\r\nimport LoadSpinner from \"../LoadSpinner/LoadSpinner\";\r\nimport history from \"../history\";\r\n\r\nconst RenderedList = ({ data }) => {\r\n  const { state, setState } = useContext(GeneralContext);\r\n  const location = history.location.pathname;\r\n  //console.log(\"I rendered RenderedList\");\r\n\r\n  // //Update Context State if necessary (doing it here to save on re-renderings)\r\n  // const updateDetailData = () => {\r\n  //   if (state.detailData === data) {\r\n  //     return null;\r\n  //   } else {\r\n  //     setState({ detailData: data });\r\n  //   }\r\n  // }\r\n\r\n  // const updateUserBooks = () => {\r\n  //   if (state.detailData === data) {\r\n  //     return null;\r\n  //   } else {\r\n  //     setState({ detailData: data });\r\n  //   }\r\n  // }\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"I ran useEffect in RenderedList\");\r\n  //   if (state.detailData === data) {\r\n  //     return null;\r\n  //   } else {\r\n  //     setState({ detailData: data });\r\n  //   }\r\n\r\n  // }, [data, theUserBooks]);\r\n\r\n  // Data is either \"loading\", search results or users bookshelf\r\n  if (state.authStatus === \"guest\" && location !== \"/search\") {\r\n    return (\r\n      <Card\r\n        id={null}\r\n        title={\"You must sign in to view your library!\"}\r\n        author={\"You can still search, though.\"}\r\n        rating={<div class=\"library__book__rating__star\">&#9733;</div>}\r\n        img={noImage}\r\n        key={1000}\r\n      />\r\n    );\r\n  } else if (data === \"empty\") {\r\n    return (\r\n      <Card\r\n        id={null}\r\n        title={\"You have no books :(\"}\r\n        author={\"Do you even read?\"}\r\n        rating={<div class=\"library__book__rating__star\">&#9733;</div>}\r\n        img={noImage}\r\n        key={100}\r\n      />\r\n    );\r\n  } else if (data) {\r\n    const list = data.map((book) => {\r\n      const { volumeInfo } = book;\r\n      const { title, authors, imageLinks } = volumeInfo;\r\n\r\n      const getAuthor = () => {\r\n        if (authors) {\r\n          if (authors[0].length < 20) {\r\n            return authors[0];\r\n          } else {\r\n            return \"Author name too long!\";\r\n          }\r\n        }\r\n        return \"Author N/A\";\r\n      };\r\n\r\n      const getImage = () => {\r\n        if (imageLinks) {\r\n          if (imageLinks.thumbnail) {\r\n            return imageLinks.thumbnail;\r\n          }\r\n          if (imageLinks.smallThumbnail) {\r\n            return imageLinks.smallThumbnail;\r\n          }\r\n          return noImage;\r\n        }\r\n      };\r\n      const getTitle = () => {\r\n        if (title) {\r\n          if (title.length > 40) {\r\n            const shortTitle = title.slice(0, 40);\r\n            const newTitle = shortTitle.concat(\"...\");\r\n            return newTitle;\r\n          }\r\n        }\r\n\r\n        return title;\r\n      };\r\n\r\n      return (\r\n        <Card\r\n          id={book.id}\r\n          title={getTitle()}\r\n          author={getAuthor()}\r\n          rating=\"3 stars\"\r\n          img={getImage()}\r\n          key={book.id}\r\n        />\r\n      );\r\n    });\r\n\r\n    return <React.Fragment>{list}</React.Fragment>;\r\n  } else {\r\n    return <LoadSpinner />;\r\n  }\r\n};\r\n\r\nexport default RenderedList;\r\n","C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\LoadSpinner\\LoadSpinner.js",[],"C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\components\\AddRemoveBtn.js",["139","140"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { GeneralContext } from \"../contexts/General\";\r\nimport google from \"../api/googleBooks\";\r\n\r\nconst AddRemoveBtn = () => {\r\n  const { state, setState } = useContext(GeneralContext);\r\n\r\n  const getUsersBooks = async () => {\r\n    //Make API request\r\n    try {\r\n      const response = await google.get(\"/mylibrary/bookshelves/0/volumes\", {\r\n        headers: {\r\n          Authorization: `Bearer ${state.accessToken}`,\r\n        },\r\n      });\r\n\r\n      //Convert google data into Array\r\n      const results = Object.values(response.data.items);\r\n\r\n      // Set data in State\r\n      setState({ userBooks: results });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  // Check status of book to set button\r\n  let validate;\r\n  if (state.userBooks) {\r\n    validate = state.userBooks.find((el) => el.id === state.bookID_for_detail);\r\n    console.log(`there is a userbooks, and it is: ${validate}`);\r\n    if (validate !== undefined) {\r\n    }\r\n  } else {\r\n    console.log(\"There is no userBooks data\");\r\n    validate = undefined;\r\n  }\r\n  console.log(validate);\r\n\r\n  const add = async () => {\r\n    if (state.authStatus === \"guest\") {\r\n      return alert(\"You must sign in to add books to your library!\");\r\n    }\r\n    //Send POST Request to Google to Add book\r\n    const postBook = async () => {\r\n      console.log(\"trying to add\");\r\n      //Make API request\r\n      try {\r\n        const response = await google.post(\r\n          `/mylibrary/bookshelves/0/addVolume?volumeId=${state.bookID_for_detail}`,\r\n          {},\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${state.accessToken}`,\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n        //IF response is 200, update usersBooks\r\n        if (response.status === 200) {\r\n          await getUsersBooks();\r\n\r\n          console.log(response);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n\r\n    await postBook();\r\n  };\r\n\r\n  const remove = async () => {\r\n    //Send POST Request to Google to Add book\r\n    console.log(\"trying to remove book\");\r\n    const removeBook = async () => {\r\n      //Make API request\r\n      try {\r\n        const response = await google.post(\r\n          `/mylibrary/bookshelves/0/removeVolume?volumeId=${state.bookID_for_detail}`,\r\n          {},\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${state.accessToken}`,\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n        //IF response is 200, update usersBooks\r\n        if (response.status === 200) {\r\n          await getUsersBooks();\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n\r\n    await removeBook();\r\n  };\r\n\r\n  const button = () => {\r\n    console.log(\"button called\");\r\n    if (validate === undefined) {\r\n      // Show \"add\" button\r\n      console.log(\"I am undefined\");\r\n      return (\r\n        <div class=\"add\" onClick={add}>\r\n          <div class=\"add__text\">Add to library</div>\r\n          <svg class=\"check\">\r\n            <use xlinkHref=\"img/sprite.svg#icon-checkmark\"></use>\r\n          </svg>\r\n        </div>\r\n      );\r\n    } else if (validate !== undefined) {\r\n      console.log(\"I am NOT undefined\");\r\n      //Show \"remove\" button\r\n      return (\r\n        <div class=\"remove\" onClick={remove}>\r\n          <div class=\"remove__text\">Remove from library</div>\r\n          <svg class=\"delete\">\r\n            <use xlinkHref=\"img/sprite.svg#icon-cross\"></use>\r\n          </svg>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return <React.Fragment>{button()}</React.Fragment>;\r\n};\r\n\r\nexport default AddRemoveBtn;\r\n","C:\\Users\\Philo\\Desktop\\Coding\\myLibrary\\src\\components\\Dropdown.js",[],{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":78,"column":6,"nodeType":"147","endLine":78,"endColumn":32,"suggestions":"148"},{"ruleId":"145","severity":1,"message":"149","line":98,"column":6,"nodeType":"147","endLine":98,"endColumn":8,"suggestions":"150"},{"ruleId":"151","severity":1,"message":"152","line":9,"column":8,"nodeType":"153","messageId":"154","endLine":9,"endColumn":15},{"ruleId":"151","severity":1,"message":"155","line":12,"column":18,"nodeType":"153","messageId":"154","endLine":12,"endColumn":26},{"ruleId":"145","severity":1,"message":"156","line":48,"column":6,"nodeType":"147","endLine":48,"endColumn":25,"suggestions":"157"},{"ruleId":"151","severity":1,"message":"158","line":1,"column":29,"nodeType":"153","messageId":"154","endLine":1,"endColumn":38},{"ruleId":"145","severity":1,"message":"159","line":79,"column":6,"nodeType":"147","endLine":79,"endColumn":33,"suggestions":"160"},{"ruleId":"151","severity":1,"message":"158","line":1,"column":27,"nodeType":"153","messageId":"154","endLine":1,"endColumn":36},{"ruleId":"145","severity":1,"message":"161","line":59,"column":6,"nodeType":"147","endLine":59,"endColumn":12,"suggestions":"162"},{"ruleId":"151","severity":1,"message":"163","line":1,"column":17,"nodeType":"153","messageId":"154","endLine":1,"endColumn":27},{"ruleId":"151","severity":1,"message":"164","line":2,"column":10,"nodeType":"153","messageId":"154","endLine":2,"endColumn":24},{"ruleId":"151","severity":1,"message":"165","line":7,"column":11,"nodeType":"153","messageId":"154","endLine":7,"endColumn":21},{"ruleId":"166","severity":2,"message":"167","line":7,"column":26,"nodeType":"153","endLine":7,"endColumn":36},{"ruleId":"168","severity":2,"message":"169","line":11,"column":7,"nodeType":"153","messageId":"170","endLine":11,"endColumn":11},{"ruleId":"168","severity":2,"message":"169","line":12,"column":18,"nodeType":"153","messageId":"170","endLine":12,"endColumn":22},{"ruleId":"151","severity":1,"message":"158","line":1,"column":29,"nodeType":"153","messageId":"154","endLine":1,"endColumn":38},{"ruleId":"151","severity":1,"message":"155","line":9,"column":18,"nodeType":"153","messageId":"154","endLine":9,"endColumn":26},{"ruleId":"151","severity":1,"message":"171","line":1,"column":17,"nodeType":"153","messageId":"154","endLine":1,"endColumn":25},{"ruleId":"151","severity":1,"message":"158","line":1,"column":39,"nodeType":"153","messageId":"154","endLine":1,"endColumn":48},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'determineLocation' and 'onAuthChange'. Either include them or remove the dependency array.","ArrayExpression",["174"],"React Hook useEffect has a missing dependency: 'onAuthChange'. Either include it or remove the dependency array.",["175"],"no-unused-vars","'Spinner' is defined but never used.","Identifier","unusedVar","'setState' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getUsersBooks' and 'state.authStatus'. Either include them or remove the dependency array.",["176"],"'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'determineAndUpdateData'. Either include it or remove the dependency array.",["177"],"React Hook useEffect has a missing dependency: 'onSubmit'. Either include it or remove the dependency array.",["178"],"'useContext' is defined but never used.","'GeneralContext' is defined but never used.","'searchData' is assigned a value but never used.","react-hooks/rules-of-hooks","React Hook \"useContext\" is called in function \"renderedList\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","no-undef","'data' is not defined.","undef","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},"Update the dependencies array to be: [state.authStatus, loaded, onAuthChange, determineLocation]",{"range":"189","text":"190"},"Update the dependencies array to be: [onAuthChange]",{"range":"191","text":"192"},"Update the dependencies array to be: [getUsersBooks, state.accessToken, state.authStatus]",{"range":"193","text":"194"},"Update the dependencies array to be: [theUsersBooks, searchData, determineAndUpdateData]",{"range":"195","text":"196"},"Update the dependencies array to be: [onSubmit, term]",{"range":"197","text":"198"},[2394,2420],"[state.authStatus, loaded, onAuthChange, determineLocation]",[3058,3060],"[onAuthChange]",[1634,1653],"[getUsersBooks, state.accessToken, state.authStatus]",[2483,2510],"[theUsersBooks, searchData, determineAndUpdateData]",[1600,1606],"[onSubmit, term]"]